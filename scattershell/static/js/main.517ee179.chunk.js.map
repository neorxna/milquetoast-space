{"version":3,"sources":["Resources.js","Island.js","Locations.js","Theme.js","Map.js","App.js","serviceWorker.js","index.js"],"names":["ResourceTypes","Shellfish","Fish","Pigs","Birds","BushFood","Coconuts","RootVegetables","PreciousShells","FreshWater","Flax","Bamboo","SturdyWood","FruitTrees","Guano","FoodPerResources","_FoodPerResources","Object","defineProperty","WoodPerResources","_WoodPerResources","IslandTypes","IslandDescriptions","_IslandDescriptions","IslandIllustrations","_IslandIllustrations","IslandMaxPopulations","_IslandMaxPopulations","defaultIslandProps","id","name","trueName","isDiscovered","x","y","type","resources","neighbours","neighbourDistance","Great Ark","Shellcove","Holystone","population","numTreasures","numDwellings","hasTemple","DevelopmentLevel","developmentLevel","props","CurrentIsland","_props","objectSpread","island","canAddPerson","food","canAddDwelling","wood","_useState","useState","_useState2","slicedToArray","showingExpeditionChoices","setShowingExpeditionChoices","react_default","a","createElement","className","src","map","res","href","onClick","addPerson","disabled","addDwelling","length","Fragment","filter","neighbour","discovered","launchExpedition","Island","paths","source","_ref","_ref2","reduce","obj","_ref3","_ref4","b","dist","console","log","loc","keys","ScattershellLocations","Shell Cove","Great Arc","Morrigan","The Crook","Fivestone","Elder Island","Younger Island","Mother","Father","Twinstone","Birdstar","Last Hope","Island of Pearls","Obsidian Point","Gull's Rest","Old Crone","The Splinter","Afallon","The Pip","Brightreach","Colors","Deep","Med","Shallow","Light","Outline","defaultScattershellMapProps","places","isActive","isBig","baseMarkerOptions","stroke","fill","hachureAngle","roughness","activePlaceOptions","inactivePlaceOptions","pathOptions","sizes","_sizes","ScattershellMap","svgRef","useRef","renderMap","svg","rc","rough","draw","SVG","_defaultScattershellM","lineOptions","currentIsland","_places","opts","righties","values","forEach","place","marker","markerOptions","circleOpts","circle","placeMarker","appendChild","link","text","indexOf","font","size","anchor","on","setCurrentIsland","labelMarker","place1","place2","fromId","toId","line","useEffect","current","ref","initialIslandState","boonsAndBurdens","App","interval","wind","setWind","_useState3","_useState4","setWood","_useState5","_useState6","setFood","_useState7","_useState8","energy","setEnergy","_useState9","_useState10","count10","setCount10","_useState11","_useState12","progressItems","setProgressItems","_useState13","key","_useState14","islandStates","setIslandStates","_useState15","_useState16","getDiscoveredIslands","entries","islandsWithStates","spendFood","amount","spendWood","gameTick","_ref5","_ref6","total","resource","windDiff","Math","floor","random","newWind","_ref7","_ref8","isFoodBoosted","ready","progress","duration","Array","prototype","item","action","notReady","setInterval","clearInterval","_useState17","_useState18","discoveredIslands","setDiscoveredIslands","Map","assign","destName","concat","toConsumableArray","islandName","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.517ee179.chunk.js","sourcesContent":["const ResourceTypes = {\n  Shellfish: 'shellfish',\n  Fish: 'fish',\n  Pigs: 'pigs',\n  Birds: 'birds',\n  BushFood: 'bush food',\n  Coconuts: 'coconuts',\n  RootVegetables: 'root vegetables',\n  PreciousShells: 'precious shells',\n  FreshWater: 'fresh water',\n  Flax: 'flax',\n  Bamboo: 'bamboo',\n  SturdyWood: 'sturdy wood',\n  FruitTrees: 'fruit trees',\n  Guano: 'guano'\n}\n\nconst FoodPerResources = {\n  [ResourceTypes.Shellfish]: 1,\n  [ResourceTypes.Fish]: 2,\n  [ResourceTypes.Pigs]: 1,\n  [ResourceTypes.Birds]: 1,\n  [ResourceTypes.BushFood]: 2,\n  [ResourceTypes.Coconuts]: 1,\n  [ResourceTypes.RootVegetables]: 2,\n  [ResourceTypes.PreciousShells]: 0,\n  [ResourceTypes.FreshWater]: 2,\n  [ResourceTypes.Flax]: 0,\n  [ResourceTypes.Bamboo]: 1,\n  [ResourceTypes.SturdyWood]: 0,\n  [ResourceTypes.FruitTrees]: 1,\n  [ResourceTypes.Guano]: 0\n}\n\nconst WoodPerResources = {\n  [ResourceTypes.Shellfish]: 1,\n  [ResourceTypes.Fish]: 0,\n  [ResourceTypes.Pigs]: 1,\n  [ResourceTypes.Birds]: 1,\n  [ResourceTypes.BushFood]: 0,\n  [ResourceTypes.Coconuts]: 1,\n  [ResourceTypes.RootVegetables]: 0,\n  [ResourceTypes.PreciousShells]: 2,\n  [ResourceTypes.FreshWater]: 0,\n  [ResourceTypes.Flax]: 2,\n  [ResourceTypes.Bamboo]: 1,\n  [ResourceTypes.SturdyWood]: 2,\n  [ResourceTypes.FruitTrees]: 1,\n  [ResourceTypes.Guano]: 1\n}\n\nconst Boons = {}\nconst Burdens = {}\n\nexport {\n  ResourceTypes,\n  FoodPerResources,\n  WoodPerResources,\n  Boons,\n  Burdens\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport './App.css'\nimport { ResourceTypes, FoodPerResources, WoodPerResources } from './Resources'\n\nconst IslandTypes = {\n  Rocks: 'rocky',\n  Guano: 'guano',\n  Small: 'small',\n  Medium: 'medium',\n  Large: 'large'\n}\n\nconst IslandDescriptions = {\n  [IslandTypes.Rocks]:\n    'You are disappointed to find an inhospitable outcrop of rocks in the middle of the ocean.',\n  [IslandTypes.Guano]:\n    'This place is covered in guano, hospitable only to the many gulls that dwell here.',\n  [IslandTypes.Small]: 'You look out upon a modest but hospitable island.',\n  [IslandTypes.Medium]:\n    'You are relieved to find a plentiful and hospitable island.',\n  [IslandTypes.Large]:\n    'You are glad to the gods to find a massive volcanic island, capable of sustaining a large population.'\n}\n\nconst IslandIllustrations = {\n  [IslandTypes.Rocks]: '/island_types/rock.png',\n  [IslandTypes.Guano]: '/island_types/gull3.png',\n  [IslandTypes.Small]: '/island_types/shells.png',\n  [IslandTypes.Medium]: '/island_types/coconuts.png',\n  [IslandTypes.Large]: '/island_types/volcano.png'\n}\n\nconst IslandMaxPopulations = {\n  [IslandTypes.Rocks]: 0,\n  [IslandTypes.Guano]: 25,\n  [IslandTypes.Small]: 100,\n  [IslandTypes.Medium]: 500,\n  [IslandTypes.Large]: 1000\n}\n\nconst defaultIslandProps = {\n  id: '1',\n  name: 'Birdstar',\n  trueName: 'Artheenkwas',\n  isDiscovered: true,\n  x: 30,\n  y: 30,\n  type: IslandTypes.Guano,\n  resources: [],\n  neighbours: ['Great Ark', 'Shellcove', 'Holystone'],\n  neighbourDistance: {\n    'Great Ark': 359,\n    Shellcove: 28,\n    Holystone: 62\n  },\n  population: 0,\n  numTreasures: 0,\n  numDwellings: 0,\n  hasTemple: false\n}\n\nconst DevelopmentLevel = {\n  Undeveloped: 'undeveloped',\n  Burgeoning: 'burgeoning',\n  Developed: 'developed',\n  HighlyDeveloped: 'highly developed',\n  Advanced: 'advanced'\n}\n\nconst developmentLevel = props => {\n  // max population reached and treasures found\n  if (props.numTreasures === 10 && props.hasTemple) {\n    return DevelopmentLevel.Advanced\n  }\n  if (props.hasTemple || props.numTreasures > 5) {\n    return DevelopmentLevel.HighlyDeveloped\n  }\n  // max population reached\n  if (props.population === IslandMaxPopulations[props.type]) {\n    return DevelopmentLevel.Developed\n  }\n  //max population not yet reached\n  if (props.population > 5) {\n    return DevelopmentLevel.Burgeoning\n  }\n  return DevelopmentLevel.Undeveloped\n}\n\nconst canAddPerson = island =>\n  island.population > IslandMaxPopulations[island.type]\nconst canAddDwelling = island => false\n\nfunction CurrentIsland(_props) {\n  const props = {\n    ...defaultIslandProps,\n    ..._props\n  }\n  const expeditionChoices = () => (\n    <ul>\n      {props.neighbours\n        .filter(neighbour => !neighbour.discovered)\n        .map(neighbour => (\n          <li>\n            Launch expedition to <b>{neighbour}</b> -\n            <i> {props.neighbourDistance[neighbour]} km away</i>\n            <br />\n            <br />\n            <ul>\n              <li>\n                <a\n                  href={'javascript:;'}\n                  onClick={() =>\n                    props.launchExpedition(props, neighbour, 'outrigger')\n                  }\n                >\n                  Launch outrigger\n                </a>{' '}\n                (costs 25 resources, 50 food, risks 2 people)\n              </li>\n              <li>\n                <a\n                  href={'javascript:;'}\n                  onClick={() =>\n                    props.launchExpedition(props.name, neighbour, 'smallFleet')\n                  }\n                >\n                  Launch small fleet\n                </a>{' '}\n                (costs 50 resources, 250 food, risks 5 people)\n              </li>\n              <li>\n                <a\n                  href={'javascript:;'}\n                  onClick={() =>\n                    props.launchExpedition(props.name, neighbour, 'largeFleet')\n                  }\n                >\n                  Launch large fleet\n                </a>{' '}\n                (costs 100 resources, 500 food, risks 10 people)\n              </li>\n            </ul>\n          </li>\n        ))}\n    </ul>\n  )\n\n  const island = props\n  const canAddPerson =\n    island.population < IslandMaxPopulations[island.type] && props.food >= 50\n  const canAddDwelling = island.numDwellings < 5 && props.wood >= 100\n\n  const islandOptions = () => (\n    <ul className={'island-options measure'}>\n      {/*<li>\n        <a href=';' className={'island-options-link'}>\n          spend energy\n        </a>\n        <div className={'island-options-details'}>\n          Use your current energy on this island to foster development.\n        </div>\n      </li>*/}\n      <li>\n        <a\n          href='javascript:;'\n          onClick={() => {\n            if (canAddPerson) props.addPerson(island.name)\n          }}\n          disabled={!canAddPerson}\n          className={'island-options-link'}\n        >\n          👶 add person\n        </a>\n        <div className={'island-options-details'}>\n          Add a person to this island's population. Costs <b>50 food</b>{' '}\n          {!props.food >= 50 && '(not enough)'}\n        </div>\n      </li>\n      <li>\n        <a\n          href='javascript:;'\n          onClick={() => {\n            if (canAddDwelling) props.addDwelling(island.name)\n          }}\n          className={'island-options-link'}\n        >\n          🏠 build dwelling\n        </a>\n        <div className={'island-options-details'}>\n          Build a dwelling to house more people on this island. Up to five\n          dwellings can be built on this island.\n          <br />\n          Costs <b>100 materials</b> {!props.wood >= 100 && '(not enough)'}\n        </div>\n      </li>\n      <li>\n        <a href=';' className={'island-options-link'}>\n          🙏 build temple\n        </a>\n        <div className={'island-options-details'}>\n          <p>\n            Build a temple to find treasures to increase the prestige of the\n            island. Can only be built on a medium or larger island.\n          </p>\n          <p>\n            Building a temple will bring forth a boon or burden for this island\n            and its descendants.\n          </p>\n        </div>\n      </li>\n    </ul>\n  )\n\n  const [showingExpeditionChoices, setShowingExpeditionChoices] = useState(\n    false\n  )\n\n  const json = _ => JSON.stringify(_, undefined, 4)\n\n  return (\n    <div className={'current-island mv2'}>\n      <div className={'current-island-header'}>\n        <aside className={'current-island-illustration'}>\n          <figure>\n            <img src={IslandIllustrations[island.type]} />\n          </figure>\n        </aside>\n        <section className={'current-island-info measure'}>\n          <h3>{island.name}</h3>A <b>{island.type} island</b>\n          <p>\n            <i>{IslandDescriptions[island.type]}</i>\n          </p>\n          <ul>\n            <li>\n              Development level: <b>{developmentLevel(island)}</b>\n            </li>\n            <li>\n              Population: <b>{island.population}</b>/\n              {IslandMaxPopulations[island.type]}\n            </li>\n            <li>\n              Treasures: <b>{island.numTreasures}</b>/10\n            </li>\n            <li>\n              Dwellings: <b>{island.numDwellings}</b>/5\n            </li>\n            <li>\n              Has temple: <b>{island.hasTemple ? 'yes' : 'no'}</b>\n            </li>\n          </ul>\n        </section>\n      </div>\n      <section>\n        <h3>Resources on this island:</h3>\n        <ul>\n          {island.resources.map(res => {\n            return (\n              <li>\n                <b>{res}</b>\n                <br />\n                <i>\n                  ({FoodPerResources[res]} food, {WoodPerResources[res]}{' '}\n                  materials per tick)\n                </i>\n              </li>\n            )\n          })}\n        </ul>\n      </section>\n      <section className={'current-island-options mv2'}>\n        {islandOptions()}\n      </section>\n      <section className={'current-island-expeditions mv2'}>\n        <h4>Unexplored Islands</h4>\n\n        {props.neighbours.length === 0 ? (\n          <i>There are no islands nearby to explore.</i>\n        ) : (\n          <>\n            <i>\n              The wind and sea whisper rumors of nearby islands waiting to be\n              discovered.\n            </i>\n            {!showingExpeditionChoices ? (\n              <>\n                <br />\n                <a\n                  href={'javascript:;'}\n                  onClick={() => setShowingExpeditionChoices(true)}\n                >\n                  Show expedition choices\n                </a>\n              </>\n            ) : (\n              expeditionChoices()\n            )}\n          </>\n        )}\n      </section>\n    </div>\n  )\n}\n\nfunction Island(_props) {\n  const props = {\n    ...defaultIslandProps,\n    ..._props\n  }\n\n  return <></>\n}\n\nconst defaultTreasureProps = {}\n\nfunction Treasure(_props) {\n  // TODO add treasure tickers in App state\n  // when ticker reaches 100, can click Treasure again to receive boon\n  const props = {\n    ...defaultTreasureProps,\n    ..._props\n  }\n  return <a>Harvest the rewards of treasure</a>\n}\n\nexport { Island, CurrentIsland, IslandTypes }\n","import { IslandTypes } from './Island'\nimport { ResourceTypes } from './Resources';\n\nconst paths = [\n  ['Morrigan', 'The Crook', 16],\n  ['The Crook', 'Morrigan', 16],\n  ['Morrigan', 'Great Arc', 20],\n  ['Great Arc', 'Morrigan', 20],\n  ['Fivestone', 'The Crook', 14],\n  ['The Crook', 'Fivestone', 14],\n  ['Shell Cove', 'Great Arc', 12],\n  ['Great Arc', 'Shell Cove', 12],\n  ['The Splinter', 'Great Arc', 25],\n  ['Great Arc', 'The Splinter', 25],\n  ['The Pip', 'The Splinter', 15],\n  ['The Splinter', 'The Pip', 15],\n  ['Afallon', 'The Splinter', 22],\n  ['The Splinter', 'Afallon', 22],\n  ['Brightreach', 'The Splinter', 23],\n  ['The Splinter', 'Brightreach', 23],\n  ['Afallon', 'The Pip', 7],\n  ['The Pip', 'Afallon', 7],\n  ['Brightreach', 'The Pip', 13],\n  ['The Pip', 'Brightreach', 13],\n  ['Birdstar', 'The Pip', 25],\n  ['The Pip', 'Birdstar', 25],\n  ['Brightreach', 'Afallon', 12],\n  ['Afallon', 'Brightreach', 12],\n  ['Old Crone', 'Birdstar', 20],\n  ['Birdstar', 'Old Crone', 20],\n  ['Gull\\'s Rest', 'Shell Cove', 22],\n  ['Shell Cove', 'Gull\\'s Rest', 22],\n  ['Mother', 'Shell Cove', 28],\n  ['Shell Cove', 'Mother', 28],\n  ['Elder Island', 'Shell Cove', 30],\n  ['Shell Cove', 'Elder Island', 30],\n  ['Younger Island', 'Mother', 15],\n  ['Mother', 'Younger Island', 15],\n  ['Father', 'Mother', 10],\n  ['Mother', 'Father', 10],\n  ['Twinstone', 'Mother', 11],\n  ['Mother', 'Twinstone', 11],\n  ['Obsidian Point', 'Gull\\'s Rest', 13],\n  ['Gull\\'s Rest', 'Obsidian Point', 13],\n  ['Last Hope', 'Obsidian Point', 30],\n  ['Obsidian Point', 'Last Hope', 30],\n  ['Island of Pearls', 'Obsidian Point', 29],\n  ['Obsidian Point', 'Island of Pearls', 29],\n  ['Island of Pearls', 'Last Hope', 9],\n  ['Last Hope', 'Island of Pearls', 9],\n]\n\nconst neighbourDistance = source => {\n  let pathsForSource = paths.filter(([a, b, dist]) => source === a)\n  let neighbours = pathsForSource.reduce((obj, [a,b,dist]) => {\n    return {...obj, [b]: dist}\n  }, {})\n  return neighbours\n}\nconsole.log(neighbourDistance('Last Hope'))\n\nconst loc = (name, type, x, y, resources) => ({\n  id: name,\n  name,\n  x,\n  y,\n  type,\n  resources: resources.map(res => ResourceTypes[res]),\n  neighbours: Object.keys(neighbourDistance(name)),\n  neighbourDistance: neighbourDistance(name)\n})\n\nconst ScattershellLocations = {\n  'Shell Cove': loc('Shell Cove', IslandTypes.Small, 63, 49, []),\n  'Great Arc': loc('Great Arc', IslandTypes.Large, 56, 58, []),\n  'Morrigan': loc('Morrigan', IslandTypes.Medium, 46, 75, [\n    'Fish',\n    'RootVegetables',\n    'BushFood',\n    'Flax'\n  ]),\n  'The Crook': loc('The Crook', IslandTypes.Small, 34, 87, [\n    'Shellfish',\n    'Fish',\n    'PreciousShells'\n  ]),\n  Fivestone: loc('Fivestone', IslandTypes.Rocks, 23, 93, []),\n  'Elder Island': loc('Elder Island', IslandTypes.Rocks, 87, 55, []),\n  'Younger Island': loc('Younger Island', IslandTypes.Guano, 95, 48, [\n    'Guano',\n    'Birds'\n  ]),\n  Mother: loc('Mother', IslandTypes.Medium, 86, 60, [\n    'Flax',\n    'Birds',\n    'PreciousShells',\n    'BushFood'\n  ]),\n  Father: loc('Father', IslandTypes.Medium, 95, 60, [\n    'Bamboo',\n    'Fish',\n    'Pigs',\n    'SturdyWood'\n  ]),\n  'Twinstone': loc('Twinstone', IslandTypes.Rocks, 92, 70, []),\n  Birdstar: loc('Birdstar', IslandTypes.Guano, 40, 30, ['Guano', 'Birds']),\n  'Last Hope': loc('Last Hope', IslandTypes.Large, 97, 8, [\n    'Shellfish',\n    'Fish',\n    'Birds',\n    'StudyWood',\n    'FreshWater'\n  ]),\n  'Island of Pearls': loc('Island of Pearls', IslandTypes.Small, 98, 16, [\n    'PreciousShells',\n    'Shellfish',\n    'Coconuts'\n  ]),\n  'Obsidian Point': loc('Obsidian Point', IslandTypes.Rocks, 73, 19, []),\n  \"Gull's Rest\": loc(\"Gull's Rest\", IslandTypes.Guano, 70, 30, [\n    'Guano',\n    'Birds'\n  ]),\n  'Old Crone': loc('Old Crone', IslandTypes.Medium, 40, 10, [\n    'Coconuts',\n    'RootVegetables',\n    'Pigs',\n    'BushFood'\n  ]),\n  'The Splinter': loc('The Splinter', IslandTypes.Rocks, 33, 55, []),\n  Afallon: loc('Afallon', IslandTypes.Large, 14, 45, [\n    'FruitTrees',\n    'FreshWater',\n    'SturdyWood',\n    'Birds',\n    'Pigs'\n  ]),\n  'The Pip': loc('The Pip', IslandTypes.Small, 22, 47, [\n    'FruitTrees',\n    'Fish',\n    'SturdyWood'\n  ]),\n  Brightreach: loc('Brightreach', IslandTypes.Medium, 23, 35, [\n    'PreciousShells',\n    'FreshWater',\n    'Flax',\n    'Shellfish'\n  ])\n}\n\nexport default ScattershellLocations\n","const Colors = {\n  Deep: '#121258',\n  Med: '#5ba9ff',\n  Shallow: '#7ccbff',\n  Light: '#f3f1f1',\n  Outline: '#000d16'\n}\n\nexport default Colors\n","import React, { useState, useRef, useEffect } from 'react'\nimport './App.css'\nimport * as SVG from 'svg.js'\nimport rough from 'roughjs/dist/rough.umd'\nimport Colors from './Theme'\nimport { IslandTypes } from './Island'\nimport { link } from 'fs';\nimport { throwStatement, whileStatement } from '@babel/types';\n\nconst defaultScattershellMapProps = {\n  places: [\n    { id: 'a', x: 80, y: 120, name: 'A' },\n    {\n      id: 'b',\n      x: 200,\n      y: 100,\n      name: 'B',\n      isActive: true,\n      isBig: true\n    },\n    { id: 'c', x: 150, y: 250, name: 'C', isBig: true }\n  ],\n\n  //paths: [['a', 'b'], ['b', 'c']],\n\n  paths: [],\n  baseMarkerOptions: {\n    stroke: Colors.Outline,\n    fill: Colors.Outline, //Colors.Outline,\n    hachureAngle: 65,\n    roughness: 1.5\n  },\n\n  activePlaceOptions: {\n    fill: Colors.Outline,\n    stroke: Colors.Outline\n  },\n\n  inactivePlaceOptions: {},\n  pathOptions: {},\n  sizes: {\n    [IslandTypes.Rocks]: 5,\n    [IslandTypes.Guano]: 10,\n    [IslandTypes.Small]: 15,\n    [IslandTypes.Medium]: 20,\n    [IslandTypes.Large]: 35\n  }\n}\n\nfunction ScattershellMap(props) {\n  const svgRef = useRef(null)\n\n  function renderMap(svg) {\n    const rc = rough.svg(svg)\n    const draw = SVG(svg) //svg.js draw\n\n   /* draw.click(event => {\n      let x = event.clientX - draw.parent.offsetLeft,\n        y = event.clientY - draw.parent.offsetTop\n      \n        console.log(x,y)\n    })*/\n\n    const {\n      places,\n      paths,\n      baseMarkerOptions,\n      activePlaceOptions,\n      inactivePlaceOptions,\n      lineOptions,\n      sizes,\n      currentIsland // string\n    } = {\n      ...defaultScattershellMapProps,\n      ...props\n    }\n\n    const xOffset = -25,\n      yOffset = -20\n\n    const _places = places\n    const opts = baseMarkerOptions\n\n    const righties = ['The Pip', 'Elder Island']\n\n    const placeMarker = ({ name, x, y, type, markerOptions }) => {\n      let circleOpts = {\n        ...opts,\n        ...(name === currentIsland ? activePlaceOptions : inactivePlaceOptions),\n        ...markerOptions\n      }\n      return rc.circle(\n        x * 5 + xOffset,\n        y * 5 + yOffset,\n        sizes[type],\n        circleOpts\n      )\n    }\n    const pathMarker = (place1, place2) =>\n      rc.line(place1.x, place1.y, place2.x, place2.y, {\n        ...opts,\n        ...lineOptions,\n        stroke: Colors.Light\n      })\n\n    const labelMarker = place => {\n      draw\n        .link('javascript:;')\n        .text(place.name)\n        .fill(Colors.Outline)\n        .x(place.x * 5 + xOffset + (righties.indexOf(place.name) !== -1 ? 45 : 0))\n        .y(place.y * 5 + yOffset + (righties.indexOf(place.name) !== -1 ? -8 : sizes[place.type] / 2)) //(place.isBig ? 30 : 20))\n        .font({\n          size: 14,\n          anchor: 'middle'\n        })\n        .on('click', ()=>{props.setCurrentIsland(place.name)})\n    }\n\n    Object.values(_places).forEach(place => {\n      if (place.isDiscovered) {\n        let marker = placeMarker(place)\n        svg.appendChild(marker)\n        labelMarker(place)\n      }\n    })\n\n    paths.forEach(([fromId, toId]) => {\n      let marker = pathMarker(_places[fromId], _places[toId])\n      svg.appendChild(marker)\n    })\n  }\n\n  useEffect(() => {\n    let svg = svgRef.current\n    renderMap(svg)\n  }, [svgRef.current])\n\n  return <svg ref={svgRef} className={'map-svg'} />\n}\nexport default ScattershellMap\n","import React, { useState, useRef, useEffect } from 'react'\nimport './App.css'\nimport { Island, CurrentIsland } from './Island'\nimport ScattershellLocations from './Locations'\nimport ScattershellMap from './Map'\nimport { ResourceTypes, FoodPerResources, WoodPerResources } from './Resources'\n\nconst json = _ => JSON.stringify(_, undefined, 4)\n\n/* island state:\n - population ( adds in exchange for food, up to numDwellings * 5 or population limit)\n - hasTemple\n - isDiscovered\n - boonsAndBurdens (when island is discovered, it gets initialised with source list)\n - numDwellings ( allows higher population. requires wood)\n - numTreasures ( slowly add over time with temple. gives food and wood bonus when clicked)\n\n global state:\n - wood ( auto increments * multipliers)\n - food (auto increments * multipliers)\n - wind (varies randomly but always > 0)\n\n island disovered: \n - set isDiscovered=true on dest\n - copy source boonsAndBurdens to dest\n - initialise with number of people (outrigger, small fleet or large fleet)\n */\n\nconst initialIslandState = {\n  population: 0,\n  hasTemple: false,\n  isDiscovered: false,\n  boonsAndBurdens: [],\n  numDwellings: 0,\n  numTreasures: 0\n}\n\nfunction App() {\n  let interval = null\n\n  /* resources */\n  const [wind, setWind] = useState(0)\n  const [wood, setWood] = useState(0)\n  const [food, setFood] = useState(0)\n  const [energy, setEnergy] = useState(0)\n  const [count10, setCount10] = useState(0)\n  const [progressItems, setProgressItems] = useState([])\n  const [islandStates, setIslandStates] = useState(\n    Object.keys(ScattershellLocations).reduce(\n      (obj, key) => ({ ...obj, [key]: initialIslandState }),\n      {}\n    ) // { islandname: state }\n  )\n  const [currentIsland, setCurrentIsland] = useState('Morrigan')\n  // the island that is currently being viewed.\n\n  const getDiscoveredIslands = () =>\n    Object.entries(islandStates).filter(\n      ([name, islandState]) => islandState.isDiscovered\n    )\n\n  const islandsWithStates = Object.keys(ScattershellLocations).reduce(\n    (obj, key) => ({\n      ...obj,\n      [key]: { ...ScattershellLocations[key], ...islandStates[key] }\n    }),\n    {}\n  )\n\n  // discover the starting island\n  useEffect(() => {\n    setIslandStates({\n      ...islandStates,\n      'Morrigan': { ...islandStates['Morrigan'], isDiscovered: true }\n    })\n  }, [])\n\n  const addPerson = islandName => {\n    setIslandStates({\n      ...islandStates,\n      [islandName]: {\n        ...islandStates[islandName],\n        population: islandStates[islandName].population + 1\n      }\n    })\n    spendFood(50)\n  }\n\n  const addDwelling = islandName => {\n    setIslandStates({\n      ...islandStates,\n      [islandName]: {\n        ...islandStates[islandName],\n        numDwellings: islandStates[islandName].numDwellings + 1\n      }\n    })\n    spendWood(100)\n  }\n\n  const spendFood = amount => {\n    setFood(food - amount)\n  }\n\n  const spendWood = amount => {\n    setWood(food - amount)\n  }\n\n  const calculateFoodPerTick = ({ resources }) =>\n    resources.reduce((total, resource) => total + FoodPerResources[resource], 0)\n\n  const calculateWoodPerTick = ({ resources }) =>\n    resources.reduce((total, resource) => total + WoodPerResources[resource], 0)\n\n  const gameTick = () => {\n    // for each discovered island, add wood and food.\n    if (count10 === 4 || count10 === 9) {\n      getDiscoveredIslands().forEach(([name, island]) => {\n        setFood(food + calculateFoodPerTick(islandsWithStates[name]))\n        setWood(wood + calculateWoodPerTick(islandsWithStates[name]))\n      })\n\n      // always +1 energy\n      setEnergy(energy + 1)\n\n      // wind tends positive?\n      let windDiff = Math.floor(Math.random() * 21) - 10\n      let newWind = wind + windDiff\n      setWind(newWind < 0 ? 0 : newWind >= 100 ? 100 : newWind)\n    }\n\n    // faster for upgraded islands\n    if (count10 % 3 === 0) {\n      getDiscoveredIslands()\n        .filter(([name, islandState]) => islandState.isFoodBoosted)\n        .forEach(() => {\n          setFood(food + 1)\n        })\n    }\n\n    // if progressItems have reached their duration, trigger them\n    let ready = progressItems.filter(x => x.progress >= x.duration)\n    Array.prototype.forEach(item => {\n      item.action()\n    }, ready)\n\n    // update the state of any progressItems\n    // only put back the ones that are not ready\n    let notReady = progressItems.filter(x => x.progress < x.duration)\n    setProgressItems(\n      notReady.map(item => ({\n        ...item,\n        progress: (item.progress += 1)\n      }))\n    )\n\n    // keep count\n    setCount10(count10 >= 9 ? 0 : count10 + 1)\n  }\n\n  useEffect(() => {\n    interval = setInterval(gameTick, 250)\n\n    return () => {\n      clearInterval(interval)\n    }\n  })\n\n  const [discoveredIslands, setDiscoveredIslands] = useState(\n    Object.keys(ScattershellLocations)\n  )\n\n  function launchExpedition(source, destName, type) {\n    if (type === 'outRigger') {\n      spendWood(25)\n      spendFood(50)\n    }\n\n    if (type === 'smallFleet') {\n      spendWood(50)\n      spendFood(250)\n    }\n\n    if (type === 'largeFleet') {\n      spendWood(100)\n      spendFood(500)\n    }\n\n    let duration = source.neighbourDistance[destName] * 100 // number of game ticks\n    let name = `Expedition from ${source.name} to ${destName}`\n    let action = () => {\n      //mark this island as discovered\n      setDiscoveredIslands([...discoveredIslands, destName])\n    }\n    let progress = 0\n    setProgressItems([...progressItems, { duration, name, action }])\n\n    // need useEffect to periodically go through each progressItem\n  }\n\n  return (\n    <main className={'game'}>\n      {/*<pre>{json(islandStates)}</pre>\n      <pre>{slow10}</pre>*/}\n      <aside className={'left'}>\n        <h2 className={'title title-subtitle'}>sailsongs of</h2>\n        <h1 className={'title title-title'}>scattershell</h1>\n        <div>version 0.4</div>\n        {/*<pre>{json(progressItems)}</pre>*/}\n        {/*<section>\n          <ul style={{ padding: '0px' }}>\n            <li>\n              <a href='javascript:;'>new game</a>\n            </li>\n            <li>\n              <a href='javascript:;'>save game</a>\n            </li>\n          </ul>\n        </section>\n        */}\n\n        <div className={'game-meters'}>\n          <section>\n            <h3>energy</h3>\n            <h4 className={'energy-meter'}>{energy}</h4>\n          </section>\n\n          <section>\n            <h3>total resources</h3>\n            <ul>\n              <li>\n                <b>{wood}</b> materials\n              </li>\n              <li>\n                <b>{food}</b> food\n              </li>\n              <li>\n                <b>{wind}</b> wind\n              </li>\n            </ul>\n          </section>\n        </div>\n\n        <section>\n          <ScattershellMap\n            places={islandsWithStates}\n            currentIsland={currentIsland}\n            setCurrentIsland={setCurrentIsland}\n          />\n        </section>\n\n        {/*<section>\n          <h3>total scores</h3>\n          <ul>\n            <li>islands discovered</li>\n            <li>population</li>\n            <li>dwellings</li>\n            <li>treasures</li>\n            <li>temples</li>\n          <0/ul>\n        </section>*/}\n      </aside>\n\n      <section className={'right'}>\n        <br />\n        <Island />\n        <br />\n        <CurrentIsland\n          {...islandsWithStates[currentIsland]}\n          launchExpedition={launchExpedition}\n          addPerson={addPerson}\n          addDwelling={addDwelling}\n          food={food}\n          wood={wood}\n        />\n      </section>\n    </main>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}