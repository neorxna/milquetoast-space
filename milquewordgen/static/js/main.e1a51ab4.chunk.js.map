{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","randomChoice","arr","Math","floor","random","length","randomArrayOfLength","len","count","result","choice","indexOf","push","pickFrom","array","spec","i","sumOfWeights","Object","values","reduce","a","b","r","sum","weightedRandomSelection","log","assignGuseinZadeWeight","concatMaybe","x","c","ph","orCond","andCond","res","orFiltered","filter","_ph","conditions","undefined","acc","condition","concat","andFiltered","BASE_CONS","VOWELS","liquids","sonorous1","sonorous2","sonorous3","sonorous4","genWord","strucs","v","f","rootConsonants","numSyllables","liqs","fins","consIndex","z","structure","split","cchoice","lchoice","fchoice","vchoice","ConlangGenerator","useState","consonants","setConsonants","shuffledVowels","setShuffledVowels","syllableStructures","setSyllableStructures","finalConsonants","setFinalConsonants","sample","setSample","generateConsonants","then","cs","generateVowelRanking","generateSyllableStructures","sort","generateFinalConsonants","finals","genSample","samples","join","useEffect","className","href","onClick","e","preventDefault","style","width","map","line","n","key","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1a51ab4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst randomChoice = arr => {\n  let index = Math.floor(Math.random() * arr.length)\n  return arr[index]\n}\n\nconst randomArrayOfLength = (len, arr) => {\n  let count = len\n  let result = []\n  while (count > 0) {\n    let choice = randomChoice(arr)\n    if (result.indexOf(choice) === -1) {\n      result.push(choice)\n      count -= 1\n    }\n  }\n  return result\n}\n\nfunction weightedRandomSelection(spec) {\n  let sumOfWeights = Object.values(spec).reduce((a, b) => { return a + b }, 0)\n  let r = Math.random() * sumOfWeights\n  let i, sum = 0\n  for (i in spec) {\n    sum += spec[i]\n    if (r <= sum) return i\n  }\n}\n\nfunction assignGuseinZadeWeight(arr) {\n  var spec = {}  // choices -> weights\n  for (var i = 0; i < arr.length; i++) {\n    /* Gusein-Zade logarithmic distribution */\n    spec[arr[i]] = ((Math.log(arr.length + 1) - Math.log(i + 1)) / arr.length) * 100\n  }\n  return spec;\n}\n\nconst pickFrom = (array) => {\n  return weightedRandomSelection(assignGuseinZadeWeight(array))\n}\n\nconst concatMaybe = (x, c, ph, orCond, andCond) => {\n  //const roll = randomChoice([0, 1, 2]) === 1\n  const res = randomArrayOfLength(randomChoice(c), ph)\n  const orFiltered = orCond == null || orCond == {} ? res : res.filter(_ph => {\n    let conditions = orCond[_ph]\n    return conditions == undefined ||\n      conditions.reduce((acc, condition) => (\n        acc || x.concat(res).indexOf(condition) !== -1\n      ), false)\n  })\n  const andFiltered = andCond == null || andCond == {} ? orFiltered : orFiltered.filter(_ph => {\n    let conditions = andCond[_ph]\n    return conditions == undefined ||\n      conditions.reduce((acc, condition) => {\n        return acc && x.concat(orFiltered).indexOf(condition) !== -1\n      }, true)\n  })\n  return x.concat(andFiltered)\n}\n\nconst BASE_CONS = [\n  'p', 't', 'k',\n  'm', 'n',\n]\n\nconst VOWELS = ['a', 'e', 'i', 'o', 'u']\n\n\nconst liquids = ['r', 'l', 'w', 'y']\n\nconst sonorous1 = [\n  'y', 'w', 'ɂ'\n]\n\nconst sonorous2 = sonorous1.concat(['r', 'l'])\n\nconst sonorous3 = sonorous2.concat([\n  'm', 'n', 'ñ', 'ng', 'v', 'z', 'zh', 'gh'\n])\nconst sonorous4 = sonorous3.concat([\n  'f', 's', 'x', 'sh', 'b', 'd', 'g', 'j', 'h', 'qh'\n])\n\nconst genWord = (strucs, v, c, f) => {\n  const rootConsonants = randomArrayOfLength(5, c)\n  const numSyllables = randomChoice([2, 3, 4])\n\n  const liqs = c.filter(x => liquids.indexOf(x) !== -1)\n  const fins = c.filter(x => f.indexOf(x) !== -1)\n  let result = []\n  let consIndex = 0\n  for (let z = 0; z < numSyllables; z++) {\n    let structure = pickFrom(strucs).split('')\n    for (let i = 0; i < structure.length; i++) {\n      if (structure[i] === 'C') {\n        let cchoice = rootConsonants[consIndex]\n        if (result.length === 0 || result[result.length - 1] !== cchoice) {\n          result.push(cchoice)\n          consIndex += 1\n        }\n      } else if (structure[i] === 'L') {\n        let lchoice = randomChoice(liqs)\n        if (liqs.length > 0 && (result.length === 0 || result[result.length - 1] !== lchoice)) result.push(lchoice)\n      } else if (structure[i] === 'F') {\n        // final\n        let fchoice = pickFrom(fins)\n        if (fins.length > 0 && (result.length === 0 || result[result.length - 1] !== fchoice)) result.push(fchoice)\n      } else {\n        let vchoice = pickFrom(v)\n        /*if (result.length === 0 || result[result.length - 1] !== vchoice)*/\n        result.push(vchoice)\n      }\n    }\n  }\n  return result\n}\n\nfunction ConlangGenerator() {\n\n  const [consonants, setConsonants] = useState(null)\n  const [shuffledVowels, setShuffledVowels] = useState(null)\n  const [syllableStructures, setSyllableStructures] = useState(null)\n  const [finalConsonants, setFinalConsonants] = useState(null)\n  const [sample, setSample] = useState([])\n\n  function generateConsonants(then) {\n    let cs = BASE_CONS.concat([])\n    cs = concatMaybe(cs, [0, 0, 0, 1, 1, 2, 3, 4], ['ɂ', 'q', 'kp', 'kw'])\n    cs = concatMaybe(cs, [1, 2, 2, 3, 3], ['s', 'f', 'h', 'x'], { 'h': ['s', 'f'], 'x': ['s', 'f'] }) // h requires s or f\n    cs = concatMaybe(cs, [0, 0, 1, 1, 2, 3, 4], ['v', 'z', 'gh', 'qh'], { 'gh': ['q', 'x'] }, { 'v': ['f'], 'z': ['s'], 'qh': ['q'] }) // 'v' requires 'f'\n    cs = concatMaybe(cs, [0, 1, 2, 2, 3, 4, 4, 4, 4], ['b', 'd', 'g', 'gw'], {}, { 'gw': ['kp'], 'b': ['p'], 'd': ['t', 'b'], 'g': ['k', 'b', 'd'] })\n    cs = concatMaybe(cs, [0, 1, 1, 2], ['ng', 'ñ'])\n    cs = concatMaybe(cs, [0, 1, 1, 2, 3], ['l', 'r', 'w', 'y'])\n    setConsonants(cs)\n  }\n\n  function generateVowelRanking() {\n    setShuffledVowels(randomArrayOfLength(VOWELS.length, VOWELS))\n  }\n\n  function generateSyllableStructures() {\n    let strucs = ['CV']\n    strucs = concatMaybe(strucs, [0, 0, 0, 1], ['VF'])\n    strucs = concatMaybe(strucs, [0, 1, 1, 2], ['CVF', 'CVV'])\n    strucs = concatMaybe(strucs, [0, 0, 0, 1, 1, 2], ['CVVF', 'CVVV'], {}, { 'CVVF': ['CVV', 'CVF'], 'CVVV': ['CVV'] })\n\n    strucs.sort((a, b) => a.length - b.length)\n    setSyllableStructures(strucs)\n  }\n\n  function generateFinalConsonants() {\n    const finals = randomChoice([\n      sonorous1,\n      sonorous2,\n      sonorous3,\n      sonorous4,\n      randomArrayOfLength(consonants.length, consonants)\n    ])\n      .filter(x => consonants.indexOf(x) !== -1)\n\n    setFinalConsonants(finals)\n  }\n\n  function genSample() {\n    let samples = []\n    for (let i = 0; i < 50; i++) {\n      samples.push(genWord(syllableStructures, shuffledVowels, consonants, finalConsonants).join(''))\n    }\n    setSample(samples)\n  }\n\n  function newConlang() {\n    generateConsonants()\n    generateVowelRanking()\n    generateSyllableStructures()\n  }\n\n  useEffect(() => {\n    if (consonants && consonants.length > 0) generateFinalConsonants()\n  }, [consonants])\n\n  useEffect(() => {\n    if (syllableStructures && shuffledVowels && consonants && finalConsonants) {\n      genSample()\n    }\n  }, [syllableStructures, shuffledVowels, consonants, finalConsonants])\n\n  useEffect(() => {\n    generateConsonants()\n    generateVowelRanking()\n    generateSyllableStructures()\n  }, [])\n\n  return <section>\n    <div className={'header-div'}>\n      <h1>milquewordgen</h1>\n      <h2>milquetoast's word generator v0.1</h2>\n      <a href='#' className={'newlang-a'} onClick={e => { e.preventDefault(); newConlang() }}>new language</a>\n      {sample.length > 0 && <a href='#' onClick={e => { e.preventDefault(); genSample() }} className={'newsample-a'}>new sample</a>}\n      <hr />\n    </div>\n    <table>\n\n      <tr>\n        <td style={{ width: '0px' }} className={'header-td'}>Consonants</td>\n        <td style={{ width: '0px' }}><a href='#' onClick={e => { e.preventDefault(); generateConsonants() }}>shuffle</a></td>\n        <td style={{ width: '100%' }}>{consonants && consonants.join(' ')}</td>\n      </tr>\n      <tr>\n        <td className={'header-td'}>Vowel ranking</td>\n        <td><a href='#' onClick={e => { e.preventDefault(); generateVowelRanking() }}>shuffle</a></td>\n        <td>{shuffledVowels && shuffledVowels.join(' ')}</td>\n      </tr>\n      <tr>\n        <td className={'header-td'}>Syllable structures</td>\n        <td><a href='#' onClick={e => { e.preventDefault(); generateSyllableStructures() }}>shuffle</a></td>\n        <td>{syllableStructures && syllableStructures.join(' ')}</td>\n      </tr>\n      <tr>\n        <td className={'header-td'}>Final consonants</td>\n        <td>{consonants && <a href='#' onClick={e => { e.preventDefault(); generateFinalConsonants() }}>shuffle</a>}</td>\n        <td>{finalConsonants && finalConsonants.join(' ')}</td>\n      </tr>\n    </table>\n    <div>\n      <ul>\n        {sample && sample.map((line, n) => <li key={`${line}${n}`}>{line}</li>)}\n      </ul>\n    </div>\n  </section>\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ConlangGenerator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}